{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","tabletHead","titles","querySelectorAll","tabletRows","nextElementSibling","sortRows","rows","index","sort","x","y","first","children","textContent","replace","second","isNaN","localeCompare","forEach","append","addEventListener","ev","columnIndex","findIndex","target"],"mappings":";AAAA,aAuBA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EApBA,IAAMA,EAAQC,SAASC,cAAc,SAC/BC,EAAaF,SAASC,cAAc,SACpCE,EAAaD,EAAAA,EAAWE,iBAAiB,OACzCC,EAAiBH,EAAAA,EAAWI,mBAAmBF,iBAAiB,OAEtE,SAASG,EAASC,EAAMC,GACPD,EAAKE,KAAK,SAACC,EAAGC,GACrBC,IAAAA,EAAQF,EAAEG,SAASL,GAAOM,YAAYC,QAAQ,iBAAkB,IAChEC,EAASL,EAAEE,SAASL,GAAOM,YAAYC,QAAQ,iBAAkB,IAEnEE,OAAAA,OAAOL,GACFA,EAAMM,cAAcF,GAEpBJ,EAAQI,IAIZG,QAAQ,SAAAT,GAAKZ,OAAAA,EAAMsB,OAAOV,KAGnCT,EAAWoB,iBAAiB,QAAS,SAACC,GAC9BC,IAAAA,EAAcrB,EAAOsB,UAAU,SAAAd,GAAKA,OAAAA,IAAMY,EAAGG,SAEnDnB,EAASF,EAAYmB","file":"main.208f6d3f.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\n// write code here\nconst table = document.querySelector('tbody');\nconst tabletHead = document.querySelector('thead');\nconst titles = [...tabletHead.querySelectorAll('th')];\nconst tabletRows = [...tabletHead.nextElementSibling.querySelectorAll('tr')];\n\nfunction sortRows(rows, index) {\n  const sorted = rows.sort((x, y) => {\n    const first = x.children[index].textContent.replace(/[^a-zA-Z0-9 ]/g, '');\n    const second = y.children[index].textContent.replace(/[^a-zA-Z0-9 ]/g, '');\n\n    if (isNaN(+first)) {\n      return first.localeCompare(second);\n    } else {\n      return first - second;\n    }\n  });\n\n  sorted.forEach(x => table.append(x));\n}\n\ntabletHead.addEventListener('click', (ev) => {\n  const columnIndex = titles.findIndex(x => x === ev.target);\n\n  sortRows(tabletRows, columnIndex);\n});\n"]}